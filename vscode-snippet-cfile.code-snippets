{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"cfile source template": {
		"prefix": "cfile-source",
		"body": [
		  "#include \"${TM_FILENAME_BASE}.h\"",
		  "",
		  "#ifdef __cplusplus",
		  "extern \"C\" {",
		  "#endif",
		  "",
		  "#include <stdbool.h>",
		  "#include <stddef.h>",
		  "#include <stdint.h>",
		  "#include <stdio.h>",
		  "#include <stdlib.h>",
		  "#include <string.h>",
		  "",
		  "$1",
		  "",
		  "#ifdef __cplusplus",
		  "}",
		  "#endif",
		  ""
		],
		"description": "cfile source template"
	  },
	  "cfile header template": {
		"prefix": "cfile-header",
		"body": [
		  "#ifndef __${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
		  "#define __${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
		  "",
		  "#ifdef __cplusplus",
		  "extern \"C\" {",
		  "#endif",
		  "",
		  "#include <stdbool.h>",
		  "#include <stddef.h>",
		  "#include <stdint.h>",
		  "#include <stdio.h>",
		  "#include <stdlib.h>",
		  "#include <string.h>",
		  "",
		  "$1",
		  "",
		  "#ifdef __cplusplus",
		  "}",
		  "#endif",
		  "",
		  "#endif  // __${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
		  ""
		],
		"description": "cfile header template"
	  }
}
